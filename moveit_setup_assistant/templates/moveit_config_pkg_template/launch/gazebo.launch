<?xml version="1.0"?>
<launch>
  <!-- Gazebo specific options -->
  <arg name="world_name" doc="Gazebo world file" default="worlds/empty.world"/>
  <arg name="world_pose" doc="Robot spawn pose argument" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot argument" default="[GAZEBO_INITIAL_JOINTS]"/>

  <!-- Start Gazebo paused -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="true"/>
  </include>

  <!-- Set robot urdf on the parameter server -->
  <param name="robot_description" [GAZEBO_URDF_LOAD_ATTRIBUTE]/>

  <!-- Push robot_description to factory, spawn robot in Gazebo and unpause -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -unpause $(arg world_pose) $(arg initial_joint_positions)" output="screen"/>

  <!-- Load joint controller parameters for Gazebo -->
  <rosparam file="$(find [GENERATED_PACKAGE_NAME])/config/gazebo_controllers.yaml"/>

  <!-- Spawn Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller"/>

  <!-- Load ROS controllers -->
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen"/>
</launch>
