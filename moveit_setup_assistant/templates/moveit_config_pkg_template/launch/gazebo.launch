<?xml version="1.0"?>
<launch>

  <!-- Gazebo specific options -->
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>

  <!-- Robot spawn pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="R" default="0"/>
  <arg name="P" default="0"/>
  <arg name="Y" default="0"/>

  <!-- Spawn options -->
  <arg name="unpause" doc="Unpause only after loading robot model argument" value="$(eval '' if arg('paused') else '-unpause')"/>
  <arg name="world_pose" doc="Robot spawn pose argument" default="-x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot argument" default="[GAZEBO_INITIAL_JOINTS]"/>

  <!-- Start Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- Set robot urdf on the parameter server -->
  <param name="robot_description" [GAZEBO_URDF_LOAD_ATTRIBUTE] />

  <!-- Push robot_description to factory and spawn robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" respawn="false" output="screen" />

  <!-- Load joint controller parameters for Gazebo -->
  <rosparam file="$(find [GENERATED_PACKAGE_NAME])/config/gazebo_controllers.yaml" />

  <!-- Spawn Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Load ROS controllers -->
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

</launch>
