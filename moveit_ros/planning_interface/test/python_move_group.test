<launch>
  <include file="$(find moveit_resources)/fanuc_moveit_config/launch/test_environment.launch"/>
  <group ns="test">
    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find moveit_resources)/fanuc_moveit_config/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/test/source_list">[/test/move_group/fake_controller_joint_states]</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- Run the main MoveIt executable -->
    <include file="$(find moveit_resources)/fanuc_moveit_config/launch/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="true"/>
      <arg name="info" value="true"/>
    </include>
  </group>
  <test pkg="moveit_ros_planning_interface" type="python_move_group.py" test-name="python_move_group"
        time-limit="300" args=""/>
</launch>
