<library path="libmoveit_default_planning_request_adapter_plugins">

  <class name="default_planner_request_adapters/Empty" type="default_planner_request_adapters::Empty" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/FixStartStateBounds" type="default_planner_request_adapters::FixStartStateBounds" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/FixStartStatePathConstraints" type="default_planner_request_adapters::FixStartStatePathConstraints" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/FixWorkspaceBounds" type="default_planner_request_adapters::FixWorkspaceBounds" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/FixStartStateCollision" type="default_planner_request_adapters::FixStartStateCollision" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/ResolveConstraintFrames" type="default_planner_request_adapters::ResolveConstraintFrames" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
      Resolves constraints that are defined in collision objects or subframes to robot links, because the former are not known to the planner.
    </description>
  </class>

  <class name="default_planner_request_adapters/AddTimeParameterization" type="default_planner_request_adapters::AddTimeParameterization" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/AddIterativeSplineParameterization" type="default_planner_request_adapters::AddIterativeSplineParameterization" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
    </description>
  </class>

  <class name="default_planner_request_adapters/AddTimeOptimalParameterization" type="default_planner_request_adapters::AddTimeOptimalParameterization" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
      This is an improved time parameterization using Time-Optimal Trajectory Generation for Path Following With Bounded Acceleration and Velocity (Kunz and Stilman, RSS 2008)
    </description>
  </class>

  <class name="default_planner_request_adapters/PublishIntermediateTrajectory" type="default_planner_request_adapters::PublishIntermediateTrajectory" base_class_type="planning_request_adapter::PlanningRequestAdapter">
    <description>
      This planning adapter allows you to publish an intermediate trajectory for purposes of debugging.  By default, it will publish on topic "intermediate_trajectory" in the namespace of the node handle passed in in the initialize function.
      Only one can be added per pipeline, due to limitations in the planning_pipeline only allowing one copy of each planning adapter to be included.
    </description>
  </class>

</library>
